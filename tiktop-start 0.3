from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium import webdriver
import time
import pickle
import random

class Bot():
    def __init__(self):
        options = webdriver.ChromeOptions()
        options.add_argument(
            'user=agend=Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36')

        options.add_argument("--disable-blink-features=AutomationControlled")
        self.browser = webdriver.Chrome(
            executable_path="C:\\Users\\123\\PycharmProjects\\untitled\\venv\\chromedriver\\chromedriver.exe",
            options=options)

    def login(self):
        browser = self.browser
        browser.get("https://intoli.com/blog/not-possible-to-block-chrome-headless/chrome-headless-test.html")

        browser.get('https://www.tiktok.com/?lang=ru-RU')
        for cookie in pickle.load(open('session_tt', 'rb')):
            browser.add_cookie(cookie)
        browser.refresh()

        time.sleep(5)

        browser.get('https://tiktop-free.com/')
        for cookie in pickle.load(open('session_ttfree', 'rb')):
            browser.add_cookie(cookie)
        browser.refresh()
        time.sleep(5)

    def auto_follow(self):
        browser = self.browser
        browser.get('https://tiktop-free.com/tasks/?type=2')

        time.sleep(3)
        browser.find_element_by_class_name("hoverl_a60f").click()
        time.sleep(3)
        browser.find_element_by_class_name("closeButton_6010").click()

        window_before = browser.window_handles[0]
        for i in range(20):
            try:
                browser.switch_to.window(window_before)
                click_like = WebDriverWait(browser, 10).until(
                    EC.element_to_be_clickable((By.CSS_SELECTOR, '.btn--complete')))
                click_like.click()

                self.tiktok_folow()
                browser.switch_to.window(window_before)

                time.sleep(2)
                self.check_tt()
            except Exception:
                print('1')
                time.sleep(20)
                browser.close()
                browser.quit()
            if i == 19:
                self.auto_like()

    def tiktok_folow(self):
        browser = self.browser

        window_after = browser.window_handles[1]
        browser.switch_to.window(window_after)
        try:
            follow = WebDriverWait(browser, 10).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, '.tiktok-btn-pc-primary')))
            follow.click()

            time.sleep(random.randrange(2, 3))
            browser.close()
        except Exception:
            time.sleep(2)
            browser.close()

    def auto_like(self):
        browser = self.browser
        browser.get('https://tiktop-free.com/tasks/?type=1')
        window_before = browser.window_handles[0]
        for i in range(20):
            try:
                click_follow = WebDriverWait(browser, 10).until(
                    EC.presence_of_element_located((By.CSS_SELECTOR, '.btn--complete')))
                click_follow.click()

                self.tiktok_like()
                browser.switch_to.window(window_before)

                time.sleep(2)
                self.check_tt()
            except Exception as ex:
                print(ex)
                print('2')
                self.time_sleep()
            if i == 19:
                self.time_sleep()

    def tiktok_like(self):
        browser = self.browser

        window_after = browser.window_handles[1]
        browser.switch_to.window(window_after)
        try:
            like = WebDriverWait(browser, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, '.jsx-1045706868')))
            like.click()

            time.sleep(random.randrange(2,3))
            browser.close()
        except Exception:
            time.sleep(2)
            browser.close()

    def check_tt(self):
        browser = self.browser
        check = browser.find_element_by_xpath("//*[contains(text(), 'Проверить')]")
        check.click()

        try:
            WebDriverWait(browser, 3).until(EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'Упс! Кажется вы не выполнили задание.')]")))
            time.sleep(2)

            browser.find_element_by_css_selector('.btn--close').click()
            time.sleep(3)
        except Exception:
            try:
                WebDriverWait(browser, 3).until(EC.presence_of_element_located(
                    (By.XPATH, "//*[contains(text(), 'Вы успешно выполнили задание!')]")))
                return True
            except Exception:
                time.sleep(2)
                browser.find_element_by_css_selector('.btn--close').click()
                print('исправить')

    def time_sleep(self):
        time.sleep(random.randrange(240, 600))
        self.auto_follow()

bot = Bot()
bot.login()
bot.auto_follow()

#Перейти в Личный кабинет
# Заработать
# Выберите аккаунт, который будете использовать для выполнения заданий
# Использовать этот аккаунт
# closeIcon_c0c9 закрыть всплывающее сообщение
# Выполнить
# Проверить
# "//*[contains(text(), 'Заработать')]"
# Хорошо, я понял
#tiktok-btn-pc-primary тиктокподписаться
#Подписаться на
#Поставить лайк
#jsx-1045706868
#Вы успешно выполнили задание!
#Упс! Кажется вы не выполнили задание.
#list-item--title task-item--title
#list-item--title task-item--title
